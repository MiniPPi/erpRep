<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.busPd.dao.BusPdDao">

    <!--  목록 조회 -->
    <select id="productList" resultType="kr.happyjob.study.busPd.model.BusPdModel">
        SELECT
        pd.product_no,
        pc.pro_name,
        sl.splr_name,
        pd.product_name,
        pd.product_serial,
        pd.product_unit_price,
        pd.product_price
        FROM tb_product pd
        INNER JOIN tb_pro pc ON pd.pro_cd = pc.pro_cd
        INNER JOIN tb_splr sl ON pd.splr_no = sl.splr_no
        <where>
            <if test="(proName != null) and (!proName.equals(''))">
                and pc.pro_name = #{proName}
            </if>
            <if test="(splrName != null) and (!splrName.equals(''))">
                and sl.splr_name = #{splrName}
            </if>
            <if test="(pname != null) and (!pname.equals(''))">
                <choose>
                    <when
                            test="searchKey eq 'product_name'.toString()">
                        and pd.product_name Like CONCAT('%', #{pname}, '%')
                    </when>
                    <otherwise>
                        and (   pd.product_name Like CONCAT('%', #{pname}, '%')
                        )
                    </otherwise>
                </choose>
            </if>
        </where>
        ORDER BY pd.product_no
        LIMIT #{pageindex}, #{pageSize}

    </select>

    <select id="countProductList" resultType="int">
        SELECT COUNT(*)
        FROM tb_product pd
        INNER JOIN tb_pro pc ON pd.pro_cd = pc.pro_cd
        INNER JOIN tb_splr sl ON pd.splr_no = sl.splr_no

        <where>
            <if test="(proName != null) and (!proName.equals(''))">
                and pc.pro_name = #{proName}
            </if>
            <if test="(splrName != null) and (!splrName.equals(''))">
                and sl.splr_name = #{splrName}
            </if>
            <if test="(pname != null) and (!pname.equals(''))">
                <choose>
                    <when
                            test="searchKey eq 'product_name'.toString()">
                        and pd.product_name Like CONCAT('%', #{pname}, '%')
                    </when>
                    <otherwise>
                        and (   pd.product_name Like CONCAT('%', #{pname}, '%')
                        )
                    </otherwise>
                </choose>
            </if>
        </where>


    </select>
    <!--  등록 -->
    <insert id="productInsert">
        <selectKey resultType="int" keyProperty="no" order="BEFORE">
            SELECT IFNULL(MAX(product_no), 0) + 1 FROM tb_product
        </selectKey>
        INSERT INTO tb_product
        (
        product_no,
        pro_cd,
        splr_no,
        product_name,
        product_dt,
        file_no,
        product_serial,
        product_unit_price,
        product_price
        )
        VALUES (
        #{no},
        #{ltypecombo},
        #{mtypecombo},
        #{product_name},
        1,
        1,
        #{product_serial},
        #{product_unit_price},
        #{product_price}
        )
    </insert>

    <!-- 수정 -->
    <update id="productUpdate">
        UPDATE tb_product
        SET   pro_cd = #{ltypecombo}
          ,splr_no = #{mtypecombo}
          ,product_name = #{product_name}
          ,product_dt = #{product_dt}
          ,file_no = #{file_no}
          ,product_serial = #{product_serial}
          ,product_unit_price = #{product_unit_price}
          ,product_price = #{product_price}
        WHERE product_no = #{product_no}
    </update>

    <!-- 삭제 -->
    <delete id="productDelete">
        DELETE FROM tb_product
        WHERE product_no = #{product_no}
    </delete>


</mapper>